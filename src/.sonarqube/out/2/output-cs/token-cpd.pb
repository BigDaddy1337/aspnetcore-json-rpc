Í
pD:\Workspace\aspnetcore-json-rpc\src\Anemonis.AspNetCore.JsonRpc.Benchmarks\Framework\SimpleBenchmarkExporter.cs
	namespace

 	
Anemonis


 
.

 

AspNetCore

 
.

 
JsonRpc

 %
.

% &

Benchmarks

& 0
.

0 1
	Framework

1 :
{ 
internal 
sealed 
class #
SimpleBenchmarkExporter 1
:2 3
ExporterBase4 @
{ 
public 
override 
void 
ExportToLog (
(( )
Summary) 0
summary1 8
,8 9
ILogger: A
loggerB H
)H I
{ 	
if 
( 
summary 
. 
Table 
. 
FullContent )
.) *
Length* 0
==1 3
$num4 5
)5 6
{ 
return 
; 
} 
summary 
. 
Table 
. 
	PrintLine #
(# $
summary$ +
.+ ,
Table, 1
.1 2

FullHeader2 <
,< =
logger> D
,D E
stringF L
.L M
EmptyM R
,R S
$strT X
)X Y
;Y Z
var 
	separator 
= 
new 
string  &
[& '
summary' .
.. /
Table/ 4
.4 5

FullHeader5 ?
.? @
Length@ F
]F G
;G H
for 
( 
var 
i 
= 
$num 
; 
i 
< 
summary  '
.' (
Table( -
.- .

FullHeader. 8
.8 9
Length9 ?
;? @
iA B
++B D
)D E
{ 
	separator 
[ 
i 
] 
= 
new "
string# )
() *
$char* -
,- .
summary/ 6
.6 7
Table7 <
.< =
Columns= D
[D E
iE F
]F G
.G H
WidthH M
)M N
;N O
} 
summary 
. 
Table 
. 
	PrintLine #
(# $
	separator$ -
,- .
logger/ 5
,5 6
string7 =
.= >
Empty> C
,C D
$strE I
)I J
;J K
for   
(   
var   
i   
=   
$num   
;   
i   
<   
summary    '
.  ' (
Table  ( -
.  - .
FullContent  . 9
.  9 :
Length  : @
;  @ A
i  B C
++  C E
)  E F
{!! 
summary"" 
."" 
Table"" 
."" 
	PrintLine"" '
(""' (
summary""( /
.""/ 0
Table""0 5
.""5 6
FullContent""6 A
[""A B
i""B C
]""C D
,""D E
logger""F L
,""L M
string""N T
.""T U
Empty""U Z
,""Z [
$str""\ `
)""` a
;""a b
}## 
}$$ 	
	protected&& 
override&& 
string&& !
FileCaption&&" -
{'' 	
get(( 
=>(( 
null(( 
;(( 
})) 	
	protected++ 
override++ 
string++ !
FileNameSuffix++" 0
{,, 	
get-- 
=>-- 
DateTime-- 
.-- 
Now-- 
.--  
ToString--  (
(--( )
$str--) >
,--> ?
CultureInfo--@ K
.--K L
InvariantCulture--L \
)--\ ]
;--] ^
}.. 	
}// 
}00 å
VD:\Workspace\aspnetcore-json-rpc\src\Anemonis.AspNetCore.JsonRpc.Benchmarks\Program.cs
	namespace 	
Anemonis
 
. 

AspNetCore 
. 
JsonRpc %
.% &

Benchmarks& 0
{ 
public 

static 
class 
Program 
{ 
public 
static 
void 
Main 
(  
)  !
{ 	
var 
configuration 
= 
ManualConfig  ,
., -
CreateEmpty- 8
(8 9
)9 :
;: ;
configuration 
. 
Add 
( 
Job !
.! "
Default" )
. 
WithWarmupCount  
(  !
$num! "
)" #
. 
WithIterationTime "
(" #
TimeInterval# /
./ 0
FromMilliseconds0 @
(@ A
$numA D
)D E
)E F
. !
WithMinIterationCount &
(& '
$num' )
)) *
. !
WithMaxIterationCount &
(& '
$num' )
)) *
. 
With 
( "
InProcessEmitToolchain ,
., -
Instance- 5
)5 6
)6 7
;7 8
configuration 
. 
Add 
( 
MemoryDiagnoser -
.- .
Default. 5
)5 6
;6 7
configuration 
. 
Add 
( 
DefaultConfig +
.+ ,
Instance, 4
.4 5
GetColumnProviders5 G
(G H
)H I
.I J
ToArrayJ Q
(Q R
)R S
)S T
;T U
configuration   
.   
Add   
(   
ConsoleLogger   +
.  + ,
Default  , 3
)  3 4
;  4 5
configuration!! 
.!! 
Add!! 
(!! 
new!! !#
SimpleBenchmarkExporter!!" 9
(!!9 :
)!!: ;
)!!; <
;!!< =
configuration"" 
."" 
SummaryStyle"" &
=""' (
SummaryStyle"") 5
.""5 6
Default""6 =
.## 
WithTimeUnit## 
(## 
TimeUnit## &
.##& '

Nanosecond##' 1
)##1 2
.$$ 
WithSizeUnit$$ 
($$ 
SizeUnit$$ &
.$$& '
B$$' (
)$$( )
;$$) *
BenchmarkRunner&& 
.&& 
Run&& 
<&&  '
JsonRpcMiddlewareBenchmarks&&  ;
>&&; <
(&&< =
configuration&&= J
)&&J K
;&&K L
}'' 	
}(( 
})) Ý
pD:\Workspace\aspnetcore-json-rpc\src\Anemonis.AspNetCore.JsonRpc.Benchmarks\Resources\EmbeddedResourceManager.cs
	namespace		 	
Anemonis		
 
.		 

AspNetCore		 
.		 
JsonRpc		 %
.		% &

Benchmarks		& 0
.		0 1
	Resources		1 :
{

 
[ 
DebuggerStepThrough 
] 
internal 
static 
class #
EmbeddedResourceManager 1
{ 
private 
static 
readonly 
Assembly  (
	_assembly) 2
=3 4
Assembly5 =
.= > 
GetExecutingAssembly> R
(R S
)S T
;T U
private 
static 
readonly 
string  &
_assemblyName' 4
=5 6
Assembly7 ?
.? @ 
GetExecutingAssembly@ T
(T U
)U V
.V W
GetNameW ^
(^ _
)_ `
.` a
Namea e
;e f
public 
static 
string 
	GetString &
(& '
string' -
name. 2
)2 3
{ 	
if 
( 
name 
== 
null 
) 
{ 
throw 
new !
ArgumentNullException /
(/ 0
nameof0 6
(6 7
name7 ;
); <
)< =
;= >
} 
using 
( 
var 
resourceStream %
=& '
	_assembly( 1
.1 2%
GetManifestResourceStream2 K
(K L
_assemblyNameL Y
+Z [
$str\ _
+` a
nameb f
)f g
)g h
{ 
if 
( 
resourceStream "
==# %
null& *
)* +
{ 
throw 
new %
InvalidOperationException 7
(7 8
$"8 :
The resource \": I
{I J
nameJ N
}N O
\" was not foundO _
"_ `
)` a
;a b
} 
using 
( 
var 
bufferStream '
=( )
new* -
MemoryStream. :
(: ;
(; <
int< ?
)? @
resourceStream@ N
.N O
LengthO U
)U V
)V W
{   
resourceStream!! "
.!!" #
CopyTo!!# )
(!!) *
bufferStream!!* 6
)!!6 7
;!!7 8
return## 
Encoding## #
.### $
UTF8##$ (
.##( )
	GetString##) 2
(##2 3
bufferStream##3 ?
.##? @
ToArray##@ G
(##G H
)##H I
)##I J
;##J K
}$$ 
}%% 
}&& 	
}'' 
}(( ¾|
kD:\Workspace\aspnetcore-json-rpc\src\Anemonis.AspNetCore.JsonRpc.Benchmarks\TestStubs\JsonRpcTestHandler.cs
	namespace 	
Anemonis
 
. 

AspNetCore 
. 
JsonRpc %
.% &

Benchmarks& 0
.0 1
	TestStubs1 :
{ 
internal		 
sealed		 
class		 
JsonRpcTestHandler		 ,
:		- .
IJsonRpcHandler		/ >
{

 
public 
IReadOnlyDictionary "
<" #
string# )
,) *"
JsonRpcRequestContract+ A
>A B
GetContractsC O
(O P
)P Q
{ 	
return 
new 

Dictionary !
<! "
string" (
,( )"
JsonRpcRequestContract* @
>@ A
{ 
[ 
$str 
] 
= 
new ""
JsonRpcRequestContract# 9
(9 :
): ;
,; <
[ 
$str 
] 
= 
new ""
JsonRpcRequestContract# 9
(9 :
): ;
,; <
[ 
$str 
] 
= 
new ""
JsonRpcRequestContract# 9
(9 :
): ;
,; <
[ 
$str 
] 
= 
new ""
JsonRpcRequestContract# 9
(9 :
new 
[ 
] 
{ 
typeof 
( 
long #
)# $
,$ %
} 
) 
, 
[ 
$str 
] 
= 
new ""
JsonRpcRequestContract# 9
(9 :
new 
[ 
] 
{ 
typeof 
( 
long #
)# $
,$ %
} 
) 
, 
[ 
$str 
] 
= 
new ""
JsonRpcRequestContract# 9
(9 :
new 
[ 
] 
{ 
typeof 
( 
long #
)# $
,$ %
}   
)   
,   
[!! 
$str!! 
]!! 
=!! 
new!! ""
JsonRpcRequestContract!!# 9
(!!9 :
new"" 

Dictionary"" "
<""" #
string""# )
,"") *
Type""+ /
>""/ 0
{## 
[$$ 
$str$$ 
]$$ 
=$$  
typeof$$! '
($$' (
long$$( ,
)$$, -
}%% 
)%% 
,%% 
[&& 
$str&& 
]&& 
=&& 
new&& ""
JsonRpcRequestContract&&# 9
(&&9 :
new'' 

Dictionary'' "
<''" #
string''# )
,'') *
Type''+ /
>''/ 0
{(( 
[)) 
$str)) 
])) 
=))  
typeof))! '
())' (
long))( ,
))), -
}** 
)** 
,** 
[++ 
$str++ 
]++ 
=++ 
new++ ""
JsonRpcRequestContract++# 9
(++9 :
new,, 

Dictionary,, "
<,," #
string,,# )
,,,) *
Type,,+ /
>,,/ 0
{-- 
[.. 
$str.. 
].. 
=..  
typeof..! '
(..' (
long..( ,
).., -
}// 
)// 
,// 
[00 
$str00 
]00 
=00 
new00 ""
JsonRpcRequestContract00# 9
(009 :
)00: ;
,00; <
[11 
$str11 
]11 
=11 
new11 ""
JsonRpcRequestContract11# 9
(119 :
)11: ;
,11; <
[22 
$str22 
]22 
=22 
new22 ""
JsonRpcRequestContract22# 9
(229 :
)22: ;
,22; <
[33 
$str33 
]33 
=33 
new33 ""
JsonRpcRequestContract33# 9
(339 :
new44 
[44 
]44 
{55 
typeof66 
(66 
long66 #
)66# $
,66$ %
}77 
)77 
,77 
[88 
$str88 
]88 
=88 
new88 ""
JsonRpcRequestContract88# 9
(889 :
new99 
[99 
]99 
{:: 
typeof;; 
(;; 
long;; #
);;# $
,;;$ %
}<< 
)<< 
,<< 
[== 
$str== 
]== 
=== 
new== ""
JsonRpcRequestContract==# 9
(==9 :
new>> 
[>> 
]>> 
{?? 
typeof@@ 
(@@ 
long@@ #
)@@# $
,@@$ %
}AA 
)AA 
,AA 
[BB 
$strBB 
]BB 
=BB 
newBB ""
JsonRpcRequestContractBB# 9
(BB9 :
newCC 

DictionaryCC "
<CC" #
stringCC# )
,CC) *
TypeCC+ /
>CC/ 0
{DD 
[EE 
$strEE 
]EE 
=EE  
typeofEE! '
(EE' (
longEE( ,
)EE, -
}FF 
)FF 
,FF 
[GG 
$strGG 
]GG 
=GG 
newGG ""
JsonRpcRequestContractGG# 9
(GG9 :
newHH 

DictionaryHH "
<HH" #
stringHH# )
,HH) *
TypeHH+ /
>HH/ 0
{II 
[JJ 
$strJJ 
]JJ 
=JJ  
typeofJJ! '
(JJ' (
longJJ( ,
)JJ, -
}KK 
)KK 
,KK 
[LL 
$strLL 
]LL 
=LL 
newLL ""
JsonRpcRequestContractLL# 9
(LL9 :
newMM 

DictionaryMM "
<MM" #
stringMM# )
,MM) *
TypeMM+ /
>MM/ 0
{NN 
[OO 
$strOO 
]OO 
=OO  
typeofOO! '
(OO' (
longOO( ,
)OO, -
}PP 
)PP 
,PP 
}QQ 
;QQ 
}RR 	
publicTT 
TaskTT 
<TT 
JsonRpcResponseTT #
>TT# $
HandleAsyncTT% 0
(TT0 1
JsonRpcRequestTT1 ?
requestTT@ G
)TTG H
{UU 	
varVV 
responseVV 
=VV 
defaultVV "
(VV" #
JsonRpcResponseVV# 2
)VV2 3
;VV3 4
switchXX 
(XX 
requestXX 
.XX 
MethodXX "
)XX" #
{YY 
caseZZ 
$strZZ 
:ZZ  
{[[ 
}\\ 
break]] 
;]] 
case^^ 
$str^^ 
:^^  
{__ 
response``  
=``! "
new``# &
JsonRpcResponse``' 6
(``6 7
request``7 >
.``> ?
Id``? A
,``A B
new``C F
JsonRpcError``G S
(``S T
$num``T V
,``V W
$str``X [
)``[ \
)``\ ]
;``] ^
}aa 
breakbb 
;bb 
casecc 
$strcc 
:cc  
{dd 
responseee  
=ee! "
newee# &
JsonRpcResponseee' 6
(ee6 7
requestee7 >
.ee> ?
Idee? A
,eeA B
neweeC F
JsonRpcErroreeG S
(eeS T
$numeeT V
,eeV W
$streeX [
,ee[ \
nullee] a
)eea b
)eeb c
;eec d
}ff 
breakgg 
;gg 
casehh 
$strhh 
:hh  
{ii 
}jj 
breakkk 
;kk 
casell 
$strll 
:ll  
{mm 
responsenn  
=nn! "
newnn# &
JsonRpcResponsenn' 6
(nn6 7
requestnn7 >
.nn> ?
Idnn? A
,nnA B
newnnC F
JsonRpcErrornnG S
(nnS T
$numnnT V
,nnV W
$strnnX [
)nn[ \
)nn\ ]
;nn] ^
}oo 
breakpp 
;pp 
caseqq 
$strqq 
:qq  
{rr 
varss 

parametersss &
=ss' (
requestss) 0
.ss0 1 
ParametersByPositionss1 E
;ssE F
responseuu  
=uu! "
newuu# &
JsonRpcResponseuu' 6
(uu6 7
requestuu7 >
.uu> ?
Iduu? A
,uuA B
newuuC F
JsonRpcErroruuG S
(uuS T
$numuuT V
,uuV W
$struuX [
,uu[ \

parametersuu] g
[uug h
$numuuh i
]uui j
)uuj k
)uuk l
;uul m
}vv 
breakww 
;ww 
casexx 
$strxx 
:xx  
{yy 
}zz 
break{{ 
;{{ 
case|| 
$str|| 
:||  
{}} 
response~~  
=~~! "
new~~# &
JsonRpcResponse~~' 6
(~~6 7
request~~7 >
.~~> ?
Id~~? A
,~~A B
new~~C F
JsonRpcError~~G S
(~~S T
$num~~T V
,~~V W
$str~~X [
)~~[ \
)~~\ ]
;~~] ^
} 
break
 
;
 
case
 
$str
 
:
  
{
 
var
 

parameters
 &
=
' (
request
) 0
.
0 1
ParametersByName
1 A
;
A B
response
  
=
! "
new
# &
JsonRpcResponse
' 6
(
6 7
request
7 >
.
> ?
Id
? A
,
A B
new
C F
JsonRpcError
G S
(
S T
$num
T V
,
V W
$str
X [
,
[ \

parameters
] g
[
g h
$str
h l
]
l m
)
m n
)
n o
;
o p
}
 
break
 
;
 
case
 
$str
 
:
  
{
 
response
  
=
! "
new
# &
JsonRpcResponse
' 6
(
6 7
request
7 >
.
> ?
Id
? A
,
A B
default
C J
(
J K
string
K Q
)
Q R
)
R S
;
S T
}
 
break
 
;
 
case
 
$str
 
:
  
{
 
response
  
=
! "
new
# &
JsonRpcResponse
' 6
(
6 7
request
7 >
.
> ?
Id
? A
,
A B
new
C F
JsonRpcError
G S
(
S T
$num
T V
,
V W
$str
X [
)
[ \
)
\ ]
;
] ^
}
 
break
 
;
 
case
 
$str
 
:
  
{
 
response
  
=
! "
new
# &
JsonRpcResponse
' 6
(
6 7
request
7 >
.
> ?
Id
? A
,
A B
new
C F
JsonRpcError
G S
(
S T
$num
T V
,
V W
$str
X [
,
[ \
null
] a
)
a b
)
b c
;
c d
}
 
break
 
;
 
case
 
$str
 
:
  
{
 
var
 

parameters
 &
=
' (
request
) 0
.
0 1"
ParametersByPosition
1 E
;
E F
response
  
=
! "
new
# &
JsonRpcResponse
' 6
(
6 7
request
7 >
.
> ?
Id
? A
,
A B

parameters
C M
[
M N
$num
N O
]
O P
)
P Q
;
Q R
}
 
break
 
;
 
case
 
$str
 
:
  
{
 
response
    
=
  ! "
new
  # &
JsonRpcResponse
  ' 6
(
  6 7
request
  7 >
.
  > ?
Id
  ? A
,
  A B
new
  C F
JsonRpcError
  G S
(
  S T
$num
  T V
,
  V W
$str
  X [
)
  [ \
)
  \ ]
;
  ] ^
}
¡¡ 
break
¢¢ 
;
¢¢ 
case
££ 
$str
££ 
:
££  
{
¤¤ 
var
¥¥ 

parameters
¥¥ &
=
¥¥' (
request
¥¥) 0
.
¥¥0 1"
ParametersByPosition
¥¥1 E
;
¥¥E F
response
§§  
=
§§! "
new
§§# &
JsonRpcResponse
§§' 6
(
§§6 7
request
§§7 >
.
§§> ?
Id
§§? A
,
§§A B
new
§§C F
JsonRpcError
§§G S
(
§§S T
$num
§§T V
,
§§V W
$str
§§X [
,
§§[ \

parameters
§§] g
[
§§g h
$num
§§h i
]
§§i j
)
§§j k
)
§§k l
;
§§l m
}
¨¨ 
break
©© 
;
©© 
case
ªª 
$str
ªª 
:
ªª  
{
«« 
var
¬¬ 

parameters
¬¬ &
=
¬¬' (
request
¬¬) 0
.
¬¬0 1
ParametersByName
¬¬1 A
;
¬¬A B
response
®®  
=
®®! "
new
®®# &
JsonRpcResponse
®®' 6
(
®®6 7
request
®®7 >
.
®®> ?
Id
®®? A
,
®®A B

parameters
®®C M
[
®®M N
$str
®®N R
]
®®R S
)
®®S T
;
®®T U
}
¯¯ 
break
°° 
;
°° 
case
±± 
$str
±± 
:
±±  
{
²² 
response
³³  
=
³³! "
new
³³# &
JsonRpcResponse
³³' 6
(
³³6 7
request
³³7 >
.
³³> ?
Id
³³? A
,
³³A B
new
³³C F
JsonRpcError
³³G S
(
³³S T
$num
³³T V
,
³³V W
$str
³³X [
)
³³[ \
)
³³\ ]
;
³³] ^
}
´´ 
break
µµ 
;
µµ 
case
¶¶ 
$str
¶¶ 
:
¶¶  
{
·· 
var
¸¸ 

parameters
¸¸ &
=
¸¸' (
request
¸¸) 0
.
¸¸0 1
ParametersByName
¸¸1 A
;
¸¸A B
response
ºº  
=
ºº! "
new
ºº# &
JsonRpcResponse
ºº' 6
(
ºº6 7
request
ºº7 >
.
ºº> ?
Id
ºº? A
,
ººA B
new
ººC F
JsonRpcError
ººG S
(
ººS T
$num
ººT V
,
ººV W
$str
ººX [
,
ºº[ \

parameters
ºº] g
[
ººg h
$str
ººh l
]
ººl m
)
ººm n
)
ººn o
;
ººo p
}
»» 
break
¼¼ 
;
¼¼ 
default
½½ 
:
½½ 
{
¾¾ 
throw
¿¿ 
new
¿¿ !#
NotSupportedException
¿¿" 7
(
¿¿7 8
)
¿¿8 9
;
¿¿9 :
}
ÀÀ 
}
ÁÁ 
return
ÃÃ 
Task
ÃÃ 
.
ÃÃ 

FromResult
ÃÃ "
(
ÃÃ" #
response
ÃÃ# +
)
ÃÃ+ ,
;
ÃÃ, -
}
ÄÄ 	
}
ÅÅ 
}ÆÆ çD
kD:\Workspace\aspnetcore-json-rpc\src\Anemonis.AspNetCore.JsonRpc.Benchmarks\TestStubs\JsonRpcTestService.cs
	namespace 	
Anemonis
 
. 

AspNetCore 
. 
JsonRpc %
.% &

Benchmarks& 0
.0 1
	TestStubs1 :
{ 
internal 
sealed 
class 
JsonRpcTestService ,
:- .
IJsonRpcService/ >
{ 
[		 	
JsonRpcMethod			 
(		 
$str		 !
)		! "
]		" #
public

 
Task

 
T0P0E0D0

 
(

 
)

 
{ 	
return 
Task 
. 
CompletedTask %
;% &
} 	
[ 	
JsonRpcMethod	 
( 
$str !
)! "
]" #
public 
Task 
T0P0E1D0 
( 
) 
{ 	
throw 
new #
JsonRpcServiceException -
(- .
$num. 0
,0 1
$str2 5
)5 6
;6 7
} 	
[ 	
JsonRpcMethod	 
( 
$str !
)! "
]" #
public 
Task 
T0P0E1D1 
( 
) 
{ 	
throw 
new #
JsonRpcServiceException -
(- .
$num. 0
,0 1
$str2 5
,5 6
null7 ;
); <
;< =
} 	
[ 	
JsonRpcMethod	 
( 
$str !
,! "
$num# $
)$ %
]% &
public 
Task 
T0P1E0D0 
( 
long !
param" '
)' (
{ 	
return 
Task 
. 
CompletedTask %
;% &
} 	
[!! 	
JsonRpcMethod!!	 
(!! 
$str!! !
,!!! "
$num!!# $
)!!$ %
]!!% &
public"" 
Task"" 
T0P1E1D0"" 
("" 
long"" !
param""" '
)""' (
{## 	
throw$$ 
new$$ #
JsonRpcServiceException$$ -
($$- .
$num$$. 0
,$$0 1
$str$$2 5
)$$5 6
;$$6 7
}%% 	
['' 	
JsonRpcMethod''	 
('' 
$str'' !
,''! "
$num''# $
)''$ %
]''% &
public(( 
Task(( 
T0P1E1D1(( 
((( 
long(( !
param((" '
)((' (
{)) 	
throw** 
new** #
JsonRpcServiceException** -
(**- .
$num**. 0
,**0 1
$str**2 5
,**5 6
param**7 <
)**< =
;**= >
}++ 	
[-- 	
JsonRpcMethod--	 
(-- 
$str-- !
,--! "
$str--# '
)--' (
]--( )
public.. 
Task.. 
T0P2E0D0.. 
(.. 
long.. !
param.." '
)..' (
{// 	
return00 
Task00 
.00 
CompletedTask00 %
;00% &
}11 	
[33 	
JsonRpcMethod33	 
(33 
$str33 !
,33! "
$str33# '
)33' (
]33( )
public44 
Task44 
T0P2E1D044 
(44 
long44 !
param44" '
)44' (
{55 	
throw66 
new66 #
JsonRpcServiceException66 -
(66- .
$num66. 0
,660 1
$str662 5
)665 6
;666 7
}77 	
[99 	
JsonRpcMethod99	 
(99 
$str99 !
,99! "
$str99# '
)99' (
]99( )
public:: 
Task:: 
T0P2E1D1:: 
(:: 
long:: !
param::" '
)::' (
{;; 	
throw<< 
new<< #
JsonRpcServiceException<< -
(<<- .
$num<<. 0
,<<0 1
$str<<2 5
,<<5 6
param<<7 <
)<<< =
;<<= >
}== 	
[?? 	
JsonRpcMethod??	 
(?? 
$str?? !
)??! "
]??" #
public@@ 
Task@@ 
<@@ 
long@@ 
>@@ 
T1P0E0D0@@ "
(@@" #
)@@# $
{AA 	
returnBB 
TaskBB 
.BB 

FromResultBB "
(BB" #
defaultBB# *
(BB* +
longBB+ /
)BB/ 0
)BB0 1
;BB1 2
}CC 	
[EE 	
JsonRpcMethodEE	 
(EE 
$strEE !
)EE! "
]EE" #
publicFF 
TaskFF 
<FF 
longFF 
>FF 
T1P0E1D0FF "
(FF" #
)FF# $
{GG 	
throwHH 
newHH #
JsonRpcServiceExceptionHH -
(HH- .
$numHH. 0
,HH0 1
$strHH2 5
)HH5 6
;HH6 7
}II 	
[KK 	
JsonRpcMethodKK	 
(KK 
$strKK !
)KK! "
]KK" #
publicLL 
TaskLL 
<LL 
longLL 
>LL 
T1P0E1D1LL "
(LL" #
)LL# $
{MM 	
throwNN 
newNN #
JsonRpcServiceExceptionNN -
(NN- .
$numNN. 0
,NN0 1
$strNN2 5
,NN5 6
nullNN7 ;
)NN; <
;NN< =
}OO 	
[QQ 	
JsonRpcMethodQQ	 
(QQ 
$strQQ !
,QQ! "
$numQQ# $
)QQ$ %
]QQ% &
publicRR 
TaskRR 
<RR 
longRR 
>RR 
T1P1E0D0RR "
(RR" #
longRR# '
paramRR( -
)RR- .
{SS 	
returnTT 
TaskTT 
.TT 

FromResultTT "
(TT" #
paramTT# (
)TT( )
;TT) *
}UU 	
[WW 	
JsonRpcMethodWW	 
(WW 
$strWW !
,WW! "
$numWW# $
)WW$ %
]WW% &
publicXX 
TaskXX 
<XX 
longXX 
>XX 
T1P1E1D0XX "
(XX" #
longXX# '
paramXX( -
)XX- .
{YY 	
throwZZ 
newZZ #
JsonRpcServiceExceptionZZ -
(ZZ- .
$numZZ. 0
,ZZ0 1
$strZZ2 5
)ZZ5 6
;ZZ6 7
}[[ 	
[]] 	
JsonRpcMethod]]	 
(]] 
$str]] !
,]]! "
$num]]# $
)]]$ %
]]]% &
public^^ 
Task^^ 
<^^ 
long^^ 
>^^ 
T1P1E1D1^^ "
(^^" #
long^^# '
param^^( -
)^^- .
{__ 	
throw`` 
new`` #
JsonRpcServiceException`` -
(``- .
$num``. 0
,``0 1
$str``2 5
,``5 6
param``7 <
)``< =
;``= >
}aa 	
[cc 	
JsonRpcMethodcc	 
(cc 
$strcc !
,cc! "
$strcc# '
)cc' (
]cc( )
publicdd 
Taskdd 
<dd 
longdd 
>dd 
T1P2E0D0dd "
(dd" #
longdd# '
paramdd( -
)dd- .
{ee 	
returnff 
Taskff 
.ff 

FromResultff "
(ff" #
paramff# (
)ff( )
;ff) *
}gg 	
[ii 	
JsonRpcMethodii	 
(ii 
$strii !
,ii! "
$strii# '
)ii' (
]ii( )
publicjj 
Taskjj 
<jj 
longjj 
>jj 
T1P2E1D0jj "
(jj" #
longjj# '
paramjj( -
)jj- .
{kk 	
throwll 
newll #
JsonRpcServiceExceptionll -
(ll- .
$numll. 0
,ll0 1
$strll2 5
)ll5 6
;ll6 7
}mm 	
[oo 	
JsonRpcMethodoo	 
(oo 
$stroo !
,oo! "
$stroo# '
)oo' (
]oo( )
publicpp 
Taskpp 
<pp 
longpp 
>pp 
T1P2E1D1pp "
(pp" #
longpp# '
parampp( -
)pp- .
{qq 	
throwrr 
newrr #
JsonRpcServiceExceptionrr -
(rr- .
$numrr. 0
,rr0 1
$strrr2 5
,rr5 6
paramrr7 <
)rr< =
;rr= >
}ss 	
}tt 
}uu ¾Ñ
uD:\Workspace\aspnetcore-json-rpc\src\Anemonis.AspNetCore.JsonRpc.Benchmarks\TestSuites\JsonRpcMiddlewareBenchmarks.cs
	namespace 	
Anemonis
 
. 

AspNetCore 
. 
JsonRpc %
.% &

Benchmarks& 0
.0 1

TestSuites1 ;
{ 
public 

class '
JsonRpcMiddlewareBenchmarks ,
{ 
private 
static 
readonly 
IReadOnlyDictionary  3
<3 4
string4 :
,: ;
byte< @
[@ A
]A B
>B C

_resourcesD N
=O P$
CreateResourceDictionaryQ i
(i j
)j k
;k l
private 
static 
readonly 
StringValues  ,
_acceptHeaderValue- ?
=@ A
newB E
StringValuesF R
(R S
$strS t
)t u
;u v
private 
readonly 
IMiddleware $
_middleware1% 1
=2 3*
CreateJsonRpcHandlerMiddleware4 R
(R S
)S T
;T U
private 
readonly 
IMiddleware $
_middleware2% 1
=2 3*
CreateJsonRpcServiceMiddleware4 R
(R S
)S T
;T U
private 
static 
IMiddleware "*
CreateJsonRpcHandlerMiddleware# A
(A B
)B C
{ 	
var 
webHost 
= 
new 
WebHostBuilder ,
(, -
)- .
.   
ConfigureServices   "
(  " #
sc  # %
=>  & (
sc  ) +
.  + ,
AddSingleton  , 8
<  8 9
JsonRpcMiddleware  9 J
<  J K
JsonRpcTestHandler  K ]
>  ] ^
,  ^ _
JsonRpcMiddleware  ` q
<  q r
JsonRpcTestHandler	  r 
>
   
>
   
(
   
)
   
)
   
.!! 
	Configure!! 
(!! 
ab!! 
=>!!  
ab!!! #
.!!# $
UseMiddleware!!$ 1
<!!1 2
JsonRpcMiddleware!!2 C
<!!C D
JsonRpcTestHandler!!D V
>!!V W
>!!W X
(!!X Y
)!!Y Z
)!!Z [
."" 
Build"" 
("" 
)"" 
;"" 
return$$ 
($$ 
IMiddleware$$ 
)$$  
webHost$$  '
.$$' (
Services$$( 0
.$$0 1

GetService$$1 ;
($$; <
typeof$$< B
($$B C
JsonRpcMiddleware$$C T
<$$T U
JsonRpcTestHandler$$U g
>$$g h
)$$h i
)$$i j
;$$j k
}%% 	
public'' 
static'' 
IMiddleware'' !*
CreateJsonRpcServiceMiddleware''" @
(''@ A
)''A B
{(( 	
var)) 
webHost)) 
=)) 
new)) 
WebHostBuilder)) ,
()), -
)))- .
.** 
ConfigureServices** "
(**" #
sc**# %
=>**& (
sc**) +
.**+ ,
AddSingleton**, 8
<**8 9
JsonRpcMiddleware**9 J
<**J K!
JsonRpcServiceHandler**K `
<**` a
JsonRpcTestService**a s
>**s t
>**t u
,**u v
JsonRpcMiddleware	**w 
<
** #
JsonRpcServiceHandler
** 
<
**  
JsonRpcTestService
** ±
>
**± ²
>
**² ³
>
**³ ´
(
**´ µ
)
**µ ¶
)
**¶ ·
.++ 
	Configure++ 
(++ 
ab++ 
=>++  
ab++! #
.++# $
UseMiddleware++$ 1
<++1 2
JsonRpcMiddleware++2 C
<++C D!
JsonRpcServiceHandler++D Y
<++Y Z
JsonRpcTestService++Z l
>++l m
>++m n
>++n o
(++o p
)++p q
)++q r
.,, 
Build,, 
(,, 
),, 
;,, 
return.. 
(.. 
IMiddleware.. 
)..  
webHost..  '
...' (
Services..( 0
...0 1

GetService..1 ;
(..; <
typeof..< B
(..B C
JsonRpcMiddleware..C T
<..T U!
JsonRpcServiceHandler..U j
<..j k
JsonRpcTestService..k }
>..} ~
>..~ 
)	.. 
)
.. 
;
.. 
}// 	
private11 
static11 
IReadOnlyDictionary11 *
<11* +
string11+ 1
,111 2
byte113 7
[117 8
]118 9
>119 :$
CreateResourceDictionary11; S
(11S T
)11T U
{22 	
var33 
	resources33 
=33 
new33 

Dictionary33  *
<33* +
string33+ 1
,331 2
byte333 7
[337 8
]338 9
>339 :
(33: ;
StringComparer33; I
.33I J
Ordinal33J Q
)33Q R
;33R S
foreach55 
(55 
var55 
code55 
in55  
CreateTestCodes55! 0
(550 1
)551 2
)552 3
{66 
	resources77 
[77 
code77 
]77 
=77  !
Encoding77" *
.77* +
UTF877+ /
.77/ 0
GetBytes770 8
(778 9#
EmbeddedResourceManager779 P
.77P Q
	GetString77Q Z
(77Z [
$"77[ ]
Assets.77] d
{77d e
code77e i
}77i j
.json77j o
"77o p
)77p q
)77q r
;77r s
}88 
return:: 
	resources:: 
;:: 
};; 	
private== 
static== 
IEnumerable== "
<==" #
string==# )
>==) *
CreateTestCodes==+ :
(==: ;
)==; <
{>> 	
return?? 
new?? 
[?? 
]?? 
{@@ 
$strAA 
,AA 
$strAA *
,AA* +
$strAA, 8
,AA8 9
$strBB 
,BB 
$strBB *
,BB* +
$strBB, 8
,BB8 9
$strCC 
,CC 
$strCC *
,CC* +
$strCC, 8
,CC8 9
$strDD 
,DD 
$strDD *
,DD* +
$strDD, 8
,DD8 9
$strEE 
,EE 
$strEE *
,EE* +
$strEE, 8
,EE8 9
$strFF 
,FF 
$strFF *
,FF* +
$strFF, 8
,FF8 9
$strGG 
,GG 
$strGG *
,GG* +
$strGG, 8
,GG8 9
$strHH 
,HH 
$strHH *
,HH* +
$strHH, 8
,HH8 9
$strII 
,II 
$strII *
,II* +
$strII, 8
,II8 9
$strJJ 
,JJ 
$strJJ *
,JJ* +
$strJJ, 8
,JJ8 9
$strKK 
,KK 
$strKK *
,KK* +
$strKK, 8
,KK8 9
$strLL 
,LL 
$strLL *
,LL* +
$strLL, 8
}MM 
;MM 
}NN 	
privatePP 
staticPP 
HttpContextPP "
CreateHttpContextPP# 4
(PP4 5
stringPP5 ;
namePP< @
)PP@ A
{QQ 	
varRR 
resultRR 
=RR 
newRR 
DefaultHttpContextRR /
(RR/ 0
)RR0 1
;RR1 2
resultTT 
.TT 
RequestTT 
.TT 
MethodTT !
=TT" #
HttpMethodsTT$ /
.TT/ 0
PostTT0 4
;TT4 5
resultUU 
.UU 
RequestUU 
.UU 
ContentTypeUU &
=UU' (
$strUU) J
;UUJ K
resultVV 
.VV 
RequestVV 
.VV 
HeadersVV "
.VV" #
AddVV# &
(VV& '
HeaderNamesVV' 2
.VV2 3
AcceptVV3 9
,VV9 :
_acceptHeaderValueVV; M
)VVM N
;VVN O
resultWW 
.WW 
RequestWW 
.WW 
BodyWW 
=WW  !
newWW" %
MemoryStreamWW& 2
(WW2 3

_resourcesWW3 =
[WW= >
nameWW> B
]WWB C
,WWC D
falseWWE J
)WWJ K
;WWK L
resultXX 
.XX 
ResponseXX 
.XX 
BodyXX  
=XX! "
newXX# &
MemoryStreamXX' 3
(XX3 4
)XX4 5
;XX5 6
returnZZ 
resultZZ 
;ZZ 
}[[ 	
private]] 
static]] 
Task]] 
FinishInvokeChain]] -
(]]- .
HttpContext]]. 9
context]]: A
)]]A B
{^^ 	
return__ 
Task__ 
.__ 
CompletedTask__ %
;__% &
}`` 	
[bb 	
	Benchmarkbb	 
(bb 
Descriptionbb 
=bb  
$strbb! 9
)bb9 :
]bb: ;
publiccc 
asynccc 
Taskcc 
HandlerB0T0P0E0D0cc +
(cc+ ,
)cc, -
{dd 	
awaitee 
_middleware1ee 
.ee 
InvokeAsyncee *
(ee* +
CreateHttpContextee+ <
(ee< =
$stree= I
)eeI J
,eeJ K
FinishInvokeChaineeL ]
)ee] ^
.ee^ _
ConfigureAwaitee_ m
(eem n
falseeen s
)ees t
;eet u
}ff 	
[hh 	
	Benchmarkhh	 
(hh 
Descriptionhh 
=hh  
$strhh! 9
)hh9 :
]hh: ;
publicii 
asyncii 
Taskii 
HandlerB0T0P0E1D0ii +
(ii+ ,
)ii, -
{jj 	
awaitkk 
_middleware1kk 
.kk 
InvokeAsynckk *
(kk* +
CreateHttpContextkk+ <
(kk< =
$strkk= I
)kkI J
,kkJ K
FinishInvokeChainkkL ]
)kk] ^
.kk^ _
ConfigureAwaitkk_ m
(kkm n
falsekkn s
)kks t
;kkt u
}ll 	
[nn 	
	Benchmarknn	 
(nn 
Descriptionnn 
=nn  
$strnn! 9
)nn9 :
]nn: ;
publicoo 
asyncoo 
Taskoo 
HandlerB0T0P0E1D1oo +
(oo+ ,
)oo, -
{pp 	
awaitqq 
_middleware1qq 
.qq 
InvokeAsyncqq *
(qq* +
CreateHttpContextqq+ <
(qq< =
$strqq= I
)qqI J
,qqJ K
FinishInvokeChainqqL ]
)qq] ^
.qq^ _
ConfigureAwaitqq_ m
(qqm n
falseqqn s
)qqs t
;qqt u
}rr 	
[tt 	
	Benchmarktt	 
(tt 
Descriptiontt 
=tt  
$strtt! 9
)tt9 :
]tt: ;
publicuu 
asyncuu 
Taskuu 
HandlerB0T0P1E0D0uu +
(uu+ ,
)uu, -
{vv 	
awaitww 
_middleware1ww 
.ww 
InvokeAsyncww *
(ww* +
CreateHttpContextww+ <
(ww< =
$strww= I
)wwI J
,wwJ K
FinishInvokeChainwwL ]
)ww] ^
.ww^ _
ConfigureAwaitww_ m
(wwm n
falsewwn s
)wws t
;wwt u
}xx 	
[zz 	
	Benchmarkzz	 
(zz 
Descriptionzz 
=zz  
$strzz! 9
)zz9 :
]zz: ;
public{{ 
async{{ 
Task{{ 
HandlerB0T0P1E1D0{{ +
({{+ ,
){{, -
{|| 	
await}} 
_middleware1}} 
.}} 
InvokeAsync}} *
(}}* +
CreateHttpContext}}+ <
(}}< =
$str}}= I
)}}I J
,}}J K
FinishInvokeChain}}L ]
)}}] ^
.}}^ _
ConfigureAwait}}_ m
(}}m n
false}}n s
)}}s t
;}}t u
}~~ 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
HandlerB0T0P1E1D1
 +
(
+ ,
)
, -
{
 	
await
 
_middleware1
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
HandlerB0T0P2E0D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware1
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
HandlerB0T0P2E1D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware1
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
HandlerB0T0P2E1D1
 +
(
+ ,
)
, -
{
 	
await
 
_middleware1
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
HandlerB0T1P0E0D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware1
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
HandlerB0T1P0E1D0
 +
(
+ ,
)
, -
{
   	
await
¡¡ 
_middleware1
¡¡ 
.
¡¡ 
InvokeAsync
¡¡ *
(
¡¡* +
CreateHttpContext
¡¡+ <
(
¡¡< =
$str
¡¡= I
)
¡¡I J
,
¡¡J K
FinishInvokeChain
¡¡L ]
)
¡¡] ^
.
¡¡^ _
ConfigureAwait
¡¡_ m
(
¡¡m n
false
¡¡n s
)
¡¡s t
;
¡¡t u
}
¢¢ 	
[
¤¤ 	
	Benchmark
¤¤	 
(
¤¤ 
Description
¤¤ 
=
¤¤  
$str
¤¤! 9
)
¤¤9 :
]
¤¤: ;
public
¥¥ 
async
¥¥ 
Task
¥¥ 
HandlerB0T1P0E1D1
¥¥ +
(
¥¥+ ,
)
¥¥, -
{
¦¦ 	
await
§§ 
_middleware1
§§ 
.
§§ 
InvokeAsync
§§ *
(
§§* +
CreateHttpContext
§§+ <
(
§§< =
$str
§§= I
)
§§I J
,
§§J K
FinishInvokeChain
§§L ]
)
§§] ^
.
§§^ _
ConfigureAwait
§§_ m
(
§§m n
false
§§n s
)
§§s t
;
§§t u
}
¨¨ 	
[
ªª 	
	Benchmark
ªª	 
(
ªª 
Description
ªª 
=
ªª  
$str
ªª! 9
)
ªª9 :
]
ªª: ;
public
«« 
async
«« 
Task
«« 
HandlerB0T1P1E0D0
«« +
(
««+ ,
)
««, -
{
¬¬ 	
await
­­ 
_middleware1
­­ 
.
­­ 
InvokeAsync
­­ *
(
­­* +
CreateHttpContext
­­+ <
(
­­< =
$str
­­= I
)
­­I J
,
­­J K
FinishInvokeChain
­­L ]
)
­­] ^
.
­­^ _
ConfigureAwait
­­_ m
(
­­m n
false
­­n s
)
­­s t
;
­­t u
}
®® 	
[
°° 	
	Benchmark
°°	 
(
°° 
Description
°° 
=
°°  
$str
°°! 9
)
°°9 :
]
°°: ;
public
±± 
async
±± 
Task
±± 
HandlerB0T1P1E1D0
±± +
(
±±+ ,
)
±±, -
{
²² 	
await
³³ 
_middleware1
³³ 
.
³³ 
InvokeAsync
³³ *
(
³³* +
CreateHttpContext
³³+ <
(
³³< =
$str
³³= I
)
³³I J
,
³³J K
FinishInvokeChain
³³L ]
)
³³] ^
.
³³^ _
ConfigureAwait
³³_ m
(
³³m n
false
³³n s
)
³³s t
;
³³t u
}
´´ 	
[
¶¶ 	
	Benchmark
¶¶	 
(
¶¶ 
Description
¶¶ 
=
¶¶  
$str
¶¶! 9
)
¶¶9 :
]
¶¶: ;
public
·· 
async
·· 
Task
·· 
HandlerB0T1P1E1D1
·· +
(
··+ ,
)
··, -
{
¸¸ 	
await
¹¹ 
_middleware1
¹¹ 
.
¹¹ 
InvokeAsync
¹¹ *
(
¹¹* +
CreateHttpContext
¹¹+ <
(
¹¹< =
$str
¹¹= I
)
¹¹I J
,
¹¹J K
FinishInvokeChain
¹¹L ]
)
¹¹] ^
.
¹¹^ _
ConfigureAwait
¹¹_ m
(
¹¹m n
false
¹¹n s
)
¹¹s t
;
¹¹t u
}
ºº 	
[
¼¼ 	
	Benchmark
¼¼	 
(
¼¼ 
Description
¼¼ 
=
¼¼  
$str
¼¼! 9
)
¼¼9 :
]
¼¼: ;
public
½½ 
async
½½ 
Task
½½ 
HandlerB0T1P2E0D0
½½ +
(
½½+ ,
)
½½, -
{
¾¾ 	
await
¿¿ 
_middleware1
¿¿ 
.
¿¿ 
InvokeAsync
¿¿ *
(
¿¿* +
CreateHttpContext
¿¿+ <
(
¿¿< =
$str
¿¿= I
)
¿¿I J
,
¿¿J K
FinishInvokeChain
¿¿L ]
)
¿¿] ^
.
¿¿^ _
ConfigureAwait
¿¿_ m
(
¿¿m n
false
¿¿n s
)
¿¿s t
;
¿¿t u
}
ÀÀ 	
[
ÂÂ 	
	Benchmark
ÂÂ	 
(
ÂÂ 
Description
ÂÂ 
=
ÂÂ  
$str
ÂÂ! 9
)
ÂÂ9 :
]
ÂÂ: ;
public
ÃÃ 
async
ÃÃ 
Task
ÃÃ 
HandlerB0T1P2E1D0
ÃÃ +
(
ÃÃ+ ,
)
ÃÃ, -
{
ÄÄ 	
await
ÅÅ 
_middleware1
ÅÅ 
.
ÅÅ 
InvokeAsync
ÅÅ *
(
ÅÅ* +
CreateHttpContext
ÅÅ+ <
(
ÅÅ< =
$str
ÅÅ= I
)
ÅÅI J
,
ÅÅJ K
FinishInvokeChain
ÅÅL ]
)
ÅÅ] ^
.
ÅÅ^ _
ConfigureAwait
ÅÅ_ m
(
ÅÅm n
false
ÅÅn s
)
ÅÅs t
;
ÅÅt u
}
ÆÆ 	
[
ÈÈ 	
	Benchmark
ÈÈ	 
(
ÈÈ 
Description
ÈÈ 
=
ÈÈ  
$str
ÈÈ! 9
)
ÈÈ9 :
]
ÈÈ: ;
public
ÉÉ 
async
ÉÉ 
Task
ÉÉ 
HandlerB0T1P2E1D1
ÉÉ +
(
ÉÉ+ ,
)
ÉÉ, -
{
ÊÊ 	
await
ËË 
_middleware1
ËË 
.
ËË 
InvokeAsync
ËË *
(
ËË* +
CreateHttpContext
ËË+ <
(
ËË< =
$str
ËË= I
)
ËËI J
,
ËËJ K
FinishInvokeChain
ËËL ]
)
ËË] ^
.
ËË^ _
ConfigureAwait
ËË_ m
(
ËËm n
false
ËËn s
)
ËËs t
;
ËËt u
}
ÌÌ 	
[
ÎÎ 	
	Benchmark
ÎÎ	 
(
ÎÎ 
Description
ÎÎ 
=
ÎÎ  
$str
ÎÎ! 9
)
ÎÎ9 :
]
ÎÎ: ;
public
ÏÏ 
async
ÏÏ 
Task
ÏÏ 
HandlerB1T0P0E0D0
ÏÏ +
(
ÏÏ+ ,
)
ÏÏ, -
{
ÐÐ 	
await
ÑÑ 
_middleware1
ÑÑ 
.
ÑÑ 
InvokeAsync
ÑÑ *
(
ÑÑ* +
CreateHttpContext
ÑÑ+ <
(
ÑÑ< =
$str
ÑÑ= I
)
ÑÑI J
,
ÑÑJ K
FinishInvokeChain
ÑÑL ]
)
ÑÑ] ^
.
ÑÑ^ _
ConfigureAwait
ÑÑ_ m
(
ÑÑm n
false
ÑÑn s
)
ÑÑs t
;
ÑÑt u
}
ÒÒ 	
[
ÔÔ 	
	Benchmark
ÔÔ	 
(
ÔÔ 
Description
ÔÔ 
=
ÔÔ  
$str
ÔÔ! 9
)
ÔÔ9 :
]
ÔÔ: ;
public
ÕÕ 
async
ÕÕ 
Task
ÕÕ 
HandlerB1T0P0E1D0
ÕÕ +
(
ÕÕ+ ,
)
ÕÕ, -
{
ÖÖ 	
await
×× 
_middleware1
×× 
.
×× 
InvokeAsync
×× *
(
××* +
CreateHttpContext
××+ <
(
××< =
$str
××= I
)
××I J
,
××J K
FinishInvokeChain
××L ]
)
××] ^
.
××^ _
ConfigureAwait
××_ m
(
××m n
false
××n s
)
××s t
;
××t u
}
ØØ 	
[
ÚÚ 	
	Benchmark
ÚÚ	 
(
ÚÚ 
Description
ÚÚ 
=
ÚÚ  
$str
ÚÚ! 9
)
ÚÚ9 :
]
ÚÚ: ;
public
ÛÛ 
async
ÛÛ 
Task
ÛÛ 
HandlerB1T0P0E1D1
ÛÛ +
(
ÛÛ+ ,
)
ÛÛ, -
{
ÜÜ 	
await
ÝÝ 
_middleware1
ÝÝ 
.
ÝÝ 
InvokeAsync
ÝÝ *
(
ÝÝ* +
CreateHttpContext
ÝÝ+ <
(
ÝÝ< =
$str
ÝÝ= I
)
ÝÝI J
,
ÝÝJ K
FinishInvokeChain
ÝÝL ]
)
ÝÝ] ^
.
ÝÝ^ _
ConfigureAwait
ÝÝ_ m
(
ÝÝm n
false
ÝÝn s
)
ÝÝs t
;
ÝÝt u
}
ÞÞ 	
[
àà 	
	Benchmark
àà	 
(
àà 
Description
àà 
=
àà  
$str
àà! 9
)
àà9 :
]
àà: ;
public
áá 
async
áá 
Task
áá 
HandlerB1T0P1E0D0
áá +
(
áá+ ,
)
áá, -
{
ââ 	
await
ãã 
_middleware1
ãã 
.
ãã 
InvokeAsync
ãã *
(
ãã* +
CreateHttpContext
ãã+ <
(
ãã< =
$str
ãã= I
)
ããI J
,
ããJ K
FinishInvokeChain
ããL ]
)
ãã] ^
.
ãã^ _
ConfigureAwait
ãã_ m
(
ããm n
false
ããn s
)
ããs t
;
ããt u
}
ää 	
[
ææ 	
	Benchmark
ææ	 
(
ææ 
Description
ææ 
=
ææ  
$str
ææ! 9
)
ææ9 :
]
ææ: ;
public
çç 
async
çç 
Task
çç 
HandlerB1T0P1E1D0
çç +
(
çç+ ,
)
çç, -
{
èè 	
await
éé 
_middleware1
éé 
.
éé 
InvokeAsync
éé *
(
éé* +
CreateHttpContext
éé+ <
(
éé< =
$str
éé= I
)
ééI J
,
ééJ K
FinishInvokeChain
ééL ]
)
éé] ^
.
éé^ _
ConfigureAwait
éé_ m
(
éém n
false
één s
)
éés t
;
éét u
}
êê 	
[
ìì 	
	Benchmark
ìì	 
(
ìì 
Description
ìì 
=
ìì  
$str
ìì! 9
)
ìì9 :
]
ìì: ;
public
íí 
async
íí 
Task
íí 
HandlerB1T0P1E1D1
íí +
(
íí+ ,
)
íí, -
{
îî 	
await
ïï 
_middleware1
ïï 
.
ïï 
InvokeAsync
ïï *
(
ïï* +
CreateHttpContext
ïï+ <
(
ïï< =
$str
ïï= I
)
ïïI J
,
ïïJ K
FinishInvokeChain
ïïL ]
)
ïï] ^
.
ïï^ _
ConfigureAwait
ïï_ m
(
ïïm n
false
ïïn s
)
ïïs t
;
ïït u
}
ðð 	
[
òò 	
	Benchmark
òò	 
(
òò 
Description
òò 
=
òò  
$str
òò! 9
)
òò9 :
]
òò: ;
public
óó 
async
óó 
Task
óó 
HandlerB1T0P2E0D0
óó +
(
óó+ ,
)
óó, -
{
ôô 	
await
õõ 
_middleware1
õõ 
.
õõ 
InvokeAsync
õõ *
(
õõ* +
CreateHttpContext
õõ+ <
(
õõ< =
$str
õõ= I
)
õõI J
,
õõJ K
FinishInvokeChain
õõL ]
)
õõ] ^
.
õõ^ _
ConfigureAwait
õõ_ m
(
õõm n
false
õõn s
)
õõs t
;
õõt u
}
öö 	
[
øø 	
	Benchmark
øø	 
(
øø 
Description
øø 
=
øø  
$str
øø! 9
)
øø9 :
]
øø: ;
public
ùù 
async
ùù 
Task
ùù 
HandlerB1T0P2E1D0
ùù +
(
ùù+ ,
)
ùù, -
{
úú 	
await
ûû 
_middleware1
ûû 
.
ûû 
InvokeAsync
ûû *
(
ûû* +
CreateHttpContext
ûû+ <
(
ûû< =
$str
ûû= I
)
ûûI J
,
ûûJ K
FinishInvokeChain
ûûL ]
)
ûû] ^
.
ûû^ _
ConfigureAwait
ûû_ m
(
ûûm n
false
ûûn s
)
ûûs t
;
ûût u
}
üü 	
[
þþ 	
	Benchmark
þþ	 
(
þþ 
Description
þþ 
=
þþ  
$str
þþ! 9
)
þþ9 :
]
þþ: ;
public
ÿÿ 
async
ÿÿ 
Task
ÿÿ 
HandlerB1T0P2E1D1
ÿÿ +
(
ÿÿ+ ,
)
ÿÿ, -
{
 	
await
 
_middleware1
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
HandlerB1T1P0E0D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware1
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
HandlerB1T1P0E1D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware1
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
HandlerB1T1P0E1D1
 +
(
+ ,
)
, -
{
 	
await
 
_middleware1
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
HandlerB1T1P1E0D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware1
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
HandlerB1T1P1E1D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware1
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
   	
[
¢¢ 	
	Benchmark
¢¢	 
(
¢¢ 
Description
¢¢ 
=
¢¢  
$str
¢¢! 9
)
¢¢9 :
]
¢¢: ;
public
££ 
async
££ 
Task
££ 
HandlerB1T1P1E1D1
££ +
(
££+ ,
)
££, -
{
¤¤ 	
await
¥¥ 
_middleware1
¥¥ 
.
¥¥ 
InvokeAsync
¥¥ *
(
¥¥* +
CreateHttpContext
¥¥+ <
(
¥¥< =
$str
¥¥= I
)
¥¥I J
,
¥¥J K
FinishInvokeChain
¥¥L ]
)
¥¥] ^
.
¥¥^ _
ConfigureAwait
¥¥_ m
(
¥¥m n
false
¥¥n s
)
¥¥s t
;
¥¥t u
}
¦¦ 	
[
¨¨ 	
	Benchmark
¨¨	 
(
¨¨ 
Description
¨¨ 
=
¨¨  
$str
¨¨! 9
)
¨¨9 :
]
¨¨: ;
public
©© 
async
©© 
Task
©© 
HandlerB1T1P2E0D0
©© +
(
©©+ ,
)
©©, -
{
ªª 	
await
«« 
_middleware1
«« 
.
«« 
InvokeAsync
«« *
(
««* +
CreateHttpContext
««+ <
(
««< =
$str
««= I
)
««I J
,
««J K
FinishInvokeChain
««L ]
)
««] ^
.
««^ _
ConfigureAwait
««_ m
(
««m n
false
««n s
)
««s t
;
««t u
}
¬¬ 	
[
®® 	
	Benchmark
®®	 
(
®® 
Description
®® 
=
®®  
$str
®®! 9
)
®®9 :
]
®®: ;
public
¯¯ 
async
¯¯ 
Task
¯¯ 
HandlerB1T1P2E1D0
¯¯ +
(
¯¯+ ,
)
¯¯, -
{
°° 	
await
±± 
_middleware1
±± 
.
±± 
InvokeAsync
±± *
(
±±* +
CreateHttpContext
±±+ <
(
±±< =
$str
±±= I
)
±±I J
,
±±J K
FinishInvokeChain
±±L ]
)
±±] ^
.
±±^ _
ConfigureAwait
±±_ m
(
±±m n
false
±±n s
)
±±s t
;
±±t u
}
²² 	
[
´´ 	
	Benchmark
´´	 
(
´´ 
Description
´´ 
=
´´  
$str
´´! 9
)
´´9 :
]
´´: ;
public
µµ 
async
µµ 
Task
µµ 
HandlerB1T1P2E1D1
µµ +
(
µµ+ ,
)
µµ, -
{
¶¶ 	
await
·· 
_middleware1
·· 
.
·· 
InvokeAsync
·· *
(
··* +
CreateHttpContext
··+ <
(
··< =
$str
··= I
)
··I J
,
··J K
FinishInvokeChain
··L ]
)
··] ^
.
··^ _
ConfigureAwait
··_ m
(
··m n
false
··n s
)
··s t
;
··t u
}
¸¸ 	
[
ºº 	
	Benchmark
ºº	 
(
ºº 
Description
ºº 
=
ºº  
$str
ºº! 9
)
ºº9 :
]
ºº: ;
public
»» 
async
»» 
Task
»» 
ServiceB0T0P0E0D0
»» +
(
»»+ ,
)
»», -
{
¼¼ 	
await
½½ 
_middleware2
½½ 
.
½½ 
InvokeAsync
½½ *
(
½½* +
CreateHttpContext
½½+ <
(
½½< =
$str
½½= I
)
½½I J
,
½½J K
FinishInvokeChain
½½L ]
)
½½] ^
.
½½^ _
ConfigureAwait
½½_ m
(
½½m n
false
½½n s
)
½½s t
;
½½t u
}
¾¾ 	
[
ÀÀ 	
	Benchmark
ÀÀ	 
(
ÀÀ 
Description
ÀÀ 
=
ÀÀ  
$str
ÀÀ! 9
)
ÀÀ9 :
]
ÀÀ: ;
public
ÁÁ 
async
ÁÁ 
Task
ÁÁ 
ServiceB0T0P0E1D0
ÁÁ +
(
ÁÁ+ ,
)
ÁÁ, -
{
ÂÂ 	
await
ÃÃ 
_middleware2
ÃÃ 
.
ÃÃ 
InvokeAsync
ÃÃ *
(
ÃÃ* +
CreateHttpContext
ÃÃ+ <
(
ÃÃ< =
$str
ÃÃ= I
)
ÃÃI J
,
ÃÃJ K
FinishInvokeChain
ÃÃL ]
)
ÃÃ] ^
.
ÃÃ^ _
ConfigureAwait
ÃÃ_ m
(
ÃÃm n
false
ÃÃn s
)
ÃÃs t
;
ÃÃt u
}
ÄÄ 	
[
ÆÆ 	
	Benchmark
ÆÆ	 
(
ÆÆ 
Description
ÆÆ 
=
ÆÆ  
$str
ÆÆ! 9
)
ÆÆ9 :
]
ÆÆ: ;
public
ÇÇ 
async
ÇÇ 
Task
ÇÇ 
ServiceB0T0P0E1D1
ÇÇ +
(
ÇÇ+ ,
)
ÇÇ, -
{
ÈÈ 	
await
ÉÉ 
_middleware2
ÉÉ 
.
ÉÉ 
InvokeAsync
ÉÉ *
(
ÉÉ* +
CreateHttpContext
ÉÉ+ <
(
ÉÉ< =
$str
ÉÉ= I
)
ÉÉI J
,
ÉÉJ K
FinishInvokeChain
ÉÉL ]
)
ÉÉ] ^
.
ÉÉ^ _
ConfigureAwait
ÉÉ_ m
(
ÉÉm n
false
ÉÉn s
)
ÉÉs t
;
ÉÉt u
}
ÊÊ 	
[
ÌÌ 	
	Benchmark
ÌÌ	 
(
ÌÌ 
Description
ÌÌ 
=
ÌÌ  
$str
ÌÌ! 9
)
ÌÌ9 :
]
ÌÌ: ;
public
ÍÍ 
async
ÍÍ 
Task
ÍÍ 
ServiceB0T0P1E0D0
ÍÍ +
(
ÍÍ+ ,
)
ÍÍ, -
{
ÎÎ 	
await
ÏÏ 
_middleware2
ÏÏ 
.
ÏÏ 
InvokeAsync
ÏÏ *
(
ÏÏ* +
CreateHttpContext
ÏÏ+ <
(
ÏÏ< =
$str
ÏÏ= I
)
ÏÏI J
,
ÏÏJ K
FinishInvokeChain
ÏÏL ]
)
ÏÏ] ^
.
ÏÏ^ _
ConfigureAwait
ÏÏ_ m
(
ÏÏm n
false
ÏÏn s
)
ÏÏs t
;
ÏÏt u
}
ÐÐ 	
[
ÒÒ 	
	Benchmark
ÒÒ	 
(
ÒÒ 
Description
ÒÒ 
=
ÒÒ  
$str
ÒÒ! 9
)
ÒÒ9 :
]
ÒÒ: ;
public
ÓÓ 
async
ÓÓ 
Task
ÓÓ 
ServiceB0T0P1E1D0
ÓÓ +
(
ÓÓ+ ,
)
ÓÓ, -
{
ÔÔ 	
await
ÕÕ 
_middleware2
ÕÕ 
.
ÕÕ 
InvokeAsync
ÕÕ *
(
ÕÕ* +
CreateHttpContext
ÕÕ+ <
(
ÕÕ< =
$str
ÕÕ= I
)
ÕÕI J
,
ÕÕJ K
FinishInvokeChain
ÕÕL ]
)
ÕÕ] ^
.
ÕÕ^ _
ConfigureAwait
ÕÕ_ m
(
ÕÕm n
false
ÕÕn s
)
ÕÕs t
;
ÕÕt u
}
ÖÖ 	
[
ØØ 	
	Benchmark
ØØ	 
(
ØØ 
Description
ØØ 
=
ØØ  
$str
ØØ! 9
)
ØØ9 :
]
ØØ: ;
public
ÙÙ 
async
ÙÙ 
Task
ÙÙ 
ServiceB0T0P1E1D1
ÙÙ +
(
ÙÙ+ ,
)
ÙÙ, -
{
ÚÚ 	
await
ÛÛ 
_middleware2
ÛÛ 
.
ÛÛ 
InvokeAsync
ÛÛ *
(
ÛÛ* +
CreateHttpContext
ÛÛ+ <
(
ÛÛ< =
$str
ÛÛ= I
)
ÛÛI J
,
ÛÛJ K
FinishInvokeChain
ÛÛL ]
)
ÛÛ] ^
.
ÛÛ^ _
ConfigureAwait
ÛÛ_ m
(
ÛÛm n
false
ÛÛn s
)
ÛÛs t
;
ÛÛt u
}
ÜÜ 	
[
ÞÞ 	
	Benchmark
ÞÞ	 
(
ÞÞ 
Description
ÞÞ 
=
ÞÞ  
$str
ÞÞ! 9
)
ÞÞ9 :
]
ÞÞ: ;
public
ßß 
async
ßß 
Task
ßß 
ServiceB0T0P2E0D0
ßß +
(
ßß+ ,
)
ßß, -
{
àà 	
await
áá 
_middleware2
áá 
.
áá 
InvokeAsync
áá *
(
áá* +
CreateHttpContext
áá+ <
(
áá< =
$str
áá= I
)
ááI J
,
ááJ K
FinishInvokeChain
ááL ]
)
áá] ^
.
áá^ _
ConfigureAwait
áá_ m
(
áám n
false
áán s
)
áás t
;
áát u
}
ââ 	
[
ää 	
	Benchmark
ää	 
(
ää 
Description
ää 
=
ää  
$str
ää! 9
)
ää9 :
]
ää: ;
public
åå 
async
åå 
Task
åå 
ServiceB0T0P2E1D0
åå +
(
åå+ ,
)
åå, -
{
ææ 	
await
çç 
_middleware2
çç 
.
çç 
InvokeAsync
çç *
(
çç* +
CreateHttpContext
çç+ <
(
çç< =
$str
çç= I
)
ççI J
,
ççJ K
FinishInvokeChain
ççL ]
)
çç] ^
.
çç^ _
ConfigureAwait
çç_ m
(
ççm n
false
ççn s
)
ççs t
;
ççt u
}
èè 	
[
êê 	
	Benchmark
êê	 
(
êê 
Description
êê 
=
êê  
$str
êê! 9
)
êê9 :
]
êê: ;
public
ëë 
async
ëë 
Task
ëë 
ServiceB0T0P2E1D1
ëë +
(
ëë+ ,
)
ëë, -
{
ìì 	
await
íí 
_middleware2
íí 
.
íí 
InvokeAsync
íí *
(
íí* +
CreateHttpContext
íí+ <
(
íí< =
$str
íí= I
)
ííI J
,
ííJ K
FinishInvokeChain
ííL ]
)
íí] ^
.
íí^ _
ConfigureAwait
íí_ m
(
íím n
false
íín s
)
íís t
;
íít u
}
îî 	
[
ðð 	
	Benchmark
ðð	 
(
ðð 
Description
ðð 
=
ðð  
$str
ðð! 9
)
ðð9 :
]
ðð: ;
public
ññ 
async
ññ 
Task
ññ 
ServiceB0T1P0E0D0
ññ +
(
ññ+ ,
)
ññ, -
{
òò 	
await
óó 
_middleware2
óó 
.
óó 
InvokeAsync
óó *
(
óó* +
CreateHttpContext
óó+ <
(
óó< =
$str
óó= I
)
óóI J
,
óóJ K
FinishInvokeChain
óóL ]
)
óó] ^
.
óó^ _
ConfigureAwait
óó_ m
(
óóm n
false
óón s
)
óós t
;
óót u
}
ôô 	
[
öö 	
	Benchmark
öö	 
(
öö 
Description
öö 
=
öö  
$str
öö! 9
)
öö9 :
]
öö: ;
public
÷÷ 
async
÷÷ 
Task
÷÷ 
ServiceB0T1P0E1D0
÷÷ +
(
÷÷+ ,
)
÷÷, -
{
øø 	
await
ùù 
_middleware2
ùù 
.
ùù 
InvokeAsync
ùù *
(
ùù* +
CreateHttpContext
ùù+ <
(
ùù< =
$str
ùù= I
)
ùùI J
,
ùùJ K
FinishInvokeChain
ùùL ]
)
ùù] ^
.
ùù^ _
ConfigureAwait
ùù_ m
(
ùùm n
false
ùùn s
)
ùùs t
;
ùùt u
}
úú 	
[
üü 	
	Benchmark
üü	 
(
üü 
Description
üü 
=
üü  
$str
üü! 9
)
üü9 :
]
üü: ;
public
ýý 
async
ýý 
Task
ýý 
ServiceB0T1P0E1D1
ýý +
(
ýý+ ,
)
ýý, -
{
þþ 	
await
ÿÿ 
_middleware2
ÿÿ 
.
ÿÿ 
InvokeAsync
ÿÿ *
(
ÿÿ* +
CreateHttpContext
ÿÿ+ <
(
ÿÿ< =
$str
ÿÿ= I
)
ÿÿI J
,
ÿÿJ K
FinishInvokeChain
ÿÿL ]
)
ÿÿ] ^
.
ÿÿ^ _
ConfigureAwait
ÿÿ_ m
(
ÿÿm n
false
ÿÿn s
)
ÿÿs t
;
ÿÿt u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
ServiceB0T1P1E0D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware2
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
ServiceB0T1P1E1D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware2
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
ServiceB0T1P1E1D1
 +
(
+ ,
)
, -
{
 	
await
 
_middleware2
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
ServiceB0T1P2E0D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware2
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
ServiceB0T1P2E1D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware2
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
   	
	Benchmark
  	 
(
   
Description
   
=
    
$str
  ! 9
)
  9 :
]
  : ;
public
¡¡ 
async
¡¡ 
Task
¡¡ 
ServiceB0T1P2E1D1
¡¡ +
(
¡¡+ ,
)
¡¡, -
{
¢¢ 	
await
££ 
_middleware2
££ 
.
££ 
InvokeAsync
££ *
(
££* +
CreateHttpContext
££+ <
(
££< =
$str
££= I
)
££I J
,
££J K
FinishInvokeChain
££L ]
)
££] ^
.
££^ _
ConfigureAwait
££_ m
(
££m n
false
££n s
)
££s t
;
££t u
}
¤¤ 	
[
¦¦ 	
	Benchmark
¦¦	 
(
¦¦ 
Description
¦¦ 
=
¦¦  
$str
¦¦! 9
)
¦¦9 :
]
¦¦: ;
public
§§ 
async
§§ 
Task
§§ 
ServiceB1T0P0E0D0
§§ +
(
§§+ ,
)
§§, -
{
¨¨ 	
await
©© 
_middleware2
©© 
.
©© 
InvokeAsync
©© *
(
©©* +
CreateHttpContext
©©+ <
(
©©< =
$str
©©= I
)
©©I J
,
©©J K
FinishInvokeChain
©©L ]
)
©©] ^
.
©©^ _
ConfigureAwait
©©_ m
(
©©m n
false
©©n s
)
©©s t
;
©©t u
}
ªª 	
[
¬¬ 	
	Benchmark
¬¬	 
(
¬¬ 
Description
¬¬ 
=
¬¬  
$str
¬¬! 9
)
¬¬9 :
]
¬¬: ;
public
­­ 
async
­­ 
Task
­­ 
ServiceB1T0P0E1D0
­­ +
(
­­+ ,
)
­­, -
{
®® 	
await
¯¯ 
_middleware2
¯¯ 
.
¯¯ 
InvokeAsync
¯¯ *
(
¯¯* +
CreateHttpContext
¯¯+ <
(
¯¯< =
$str
¯¯= I
)
¯¯I J
,
¯¯J K
FinishInvokeChain
¯¯L ]
)
¯¯] ^
.
¯¯^ _
ConfigureAwait
¯¯_ m
(
¯¯m n
false
¯¯n s
)
¯¯s t
;
¯¯t u
}
°° 	
[
²² 	
	Benchmark
²²	 
(
²² 
Description
²² 
=
²²  
$str
²²! 9
)
²²9 :
]
²²: ;
public
³³ 
async
³³ 
Task
³³ 
ServiceB1T0P0E1D1
³³ +
(
³³+ ,
)
³³, -
{
´´ 	
await
µµ 
_middleware2
µµ 
.
µµ 
InvokeAsync
µµ *
(
µµ* +
CreateHttpContext
µµ+ <
(
µµ< =
$str
µµ= I
)
µµI J
,
µµJ K
FinishInvokeChain
µµL ]
)
µµ] ^
.
µµ^ _
ConfigureAwait
µµ_ m
(
µµm n
false
µµn s
)
µµs t
;
µµt u
}
¶¶ 	
[
¸¸ 	
	Benchmark
¸¸	 
(
¸¸ 
Description
¸¸ 
=
¸¸  
$str
¸¸! 9
)
¸¸9 :
]
¸¸: ;
public
¹¹ 
async
¹¹ 
Task
¹¹ 
ServiceB1T0P1E0D0
¹¹ +
(
¹¹+ ,
)
¹¹, -
{
ºº 	
await
»» 
_middleware2
»» 
.
»» 
InvokeAsync
»» *
(
»»* +
CreateHttpContext
»»+ <
(
»»< =
$str
»»= I
)
»»I J
,
»»J K
FinishInvokeChain
»»L ]
)
»»] ^
.
»»^ _
ConfigureAwait
»»_ m
(
»»m n
false
»»n s
)
»»s t
;
»»t u
}
¼¼ 	
[
¾¾ 	
	Benchmark
¾¾	 
(
¾¾ 
Description
¾¾ 
=
¾¾  
$str
¾¾! 9
)
¾¾9 :
]
¾¾: ;
public
¿¿ 
async
¿¿ 
Task
¿¿ 
ServiceB1T0P1E1D0
¿¿ +
(
¿¿+ ,
)
¿¿, -
{
ÀÀ 	
await
ÁÁ 
_middleware2
ÁÁ 
.
ÁÁ 
InvokeAsync
ÁÁ *
(
ÁÁ* +
CreateHttpContext
ÁÁ+ <
(
ÁÁ< =
$str
ÁÁ= I
)
ÁÁI J
,
ÁÁJ K
FinishInvokeChain
ÁÁL ]
)
ÁÁ] ^
.
ÁÁ^ _
ConfigureAwait
ÁÁ_ m
(
ÁÁm n
false
ÁÁn s
)
ÁÁs t
;
ÁÁt u
}
ÂÂ 	
[
ÄÄ 	
	Benchmark
ÄÄ	 
(
ÄÄ 
Description
ÄÄ 
=
ÄÄ  
$str
ÄÄ! 9
)
ÄÄ9 :
]
ÄÄ: ;
public
ÅÅ 
async
ÅÅ 
Task
ÅÅ 
ServiceB1T0P1E1D1
ÅÅ +
(
ÅÅ+ ,
)
ÅÅ, -
{
ÆÆ 	
await
ÇÇ 
_middleware2
ÇÇ 
.
ÇÇ 
InvokeAsync
ÇÇ *
(
ÇÇ* +
CreateHttpContext
ÇÇ+ <
(
ÇÇ< =
$str
ÇÇ= I
)
ÇÇI J
,
ÇÇJ K
FinishInvokeChain
ÇÇL ]
)
ÇÇ] ^
.
ÇÇ^ _
ConfigureAwait
ÇÇ_ m
(
ÇÇm n
false
ÇÇn s
)
ÇÇs t
;
ÇÇt u
}
ÈÈ 	
[
ÊÊ 	
	Benchmark
ÊÊ	 
(
ÊÊ 
Description
ÊÊ 
=
ÊÊ  
$str
ÊÊ! 9
)
ÊÊ9 :
]
ÊÊ: ;
public
ËË 
async
ËË 
Task
ËË 
ServiceB1T0P2E0D0
ËË +
(
ËË+ ,
)
ËË, -
{
ÌÌ 	
await
ÍÍ 
_middleware2
ÍÍ 
.
ÍÍ 
InvokeAsync
ÍÍ *
(
ÍÍ* +
CreateHttpContext
ÍÍ+ <
(
ÍÍ< =
$str
ÍÍ= I
)
ÍÍI J
,
ÍÍJ K
FinishInvokeChain
ÍÍL ]
)
ÍÍ] ^
.
ÍÍ^ _
ConfigureAwait
ÍÍ_ m
(
ÍÍm n
false
ÍÍn s
)
ÍÍs t
;
ÍÍt u
}
ÎÎ 	
[
ÐÐ 	
	Benchmark
ÐÐ	 
(
ÐÐ 
Description
ÐÐ 
=
ÐÐ  
$str
ÐÐ! 9
)
ÐÐ9 :
]
ÐÐ: ;
public
ÑÑ 
async
ÑÑ 
Task
ÑÑ 
ServiceB1T0P2E1D0
ÑÑ +
(
ÑÑ+ ,
)
ÑÑ, -
{
ÒÒ 	
await
ÓÓ 
_middleware2
ÓÓ 
.
ÓÓ 
InvokeAsync
ÓÓ *
(
ÓÓ* +
CreateHttpContext
ÓÓ+ <
(
ÓÓ< =
$str
ÓÓ= I
)
ÓÓI J
,
ÓÓJ K
FinishInvokeChain
ÓÓL ]
)
ÓÓ] ^
.
ÓÓ^ _
ConfigureAwait
ÓÓ_ m
(
ÓÓm n
false
ÓÓn s
)
ÓÓs t
;
ÓÓt u
}
ÔÔ 	
[
ÖÖ 	
	Benchmark
ÖÖ	 
(
ÖÖ 
Description
ÖÖ 
=
ÖÖ  
$str
ÖÖ! 9
)
ÖÖ9 :
]
ÖÖ: ;
public
×× 
async
×× 
Task
×× 
ServiceB1T0P2E1D1
×× +
(
××+ ,
)
××, -
{
ØØ 	
await
ÙÙ 
_middleware2
ÙÙ 
.
ÙÙ 
InvokeAsync
ÙÙ *
(
ÙÙ* +
CreateHttpContext
ÙÙ+ <
(
ÙÙ< =
$str
ÙÙ= I
)
ÙÙI J
,
ÙÙJ K
FinishInvokeChain
ÙÙL ]
)
ÙÙ] ^
.
ÙÙ^ _
ConfigureAwait
ÙÙ_ m
(
ÙÙm n
false
ÙÙn s
)
ÙÙs t
;
ÙÙt u
}
ÚÚ 	
[
ÜÜ 	
	Benchmark
ÜÜ	 
(
ÜÜ 
Description
ÜÜ 
=
ÜÜ  
$str
ÜÜ! 9
)
ÜÜ9 :
]
ÜÜ: ;
public
ÝÝ 
async
ÝÝ 
Task
ÝÝ 
ServiceB1T1P0E0D0
ÝÝ +
(
ÝÝ+ ,
)
ÝÝ, -
{
ÞÞ 	
await
ßß 
_middleware2
ßß 
.
ßß 
InvokeAsync
ßß *
(
ßß* +
CreateHttpContext
ßß+ <
(
ßß< =
$str
ßß= I
)
ßßI J
,
ßßJ K
FinishInvokeChain
ßßL ]
)
ßß] ^
.
ßß^ _
ConfigureAwait
ßß_ m
(
ßßm n
false
ßßn s
)
ßßs t
;
ßßt u
}
àà 	
[
ââ 	
	Benchmark
ââ	 
(
ââ 
Description
ââ 
=
ââ  
$str
ââ! 9
)
ââ9 :
]
ââ: ;
public
ãã 
async
ãã 
Task
ãã 
ServiceB1T1P0E1D0
ãã +
(
ãã+ ,
)
ãã, -
{
ää 	
await
åå 
_middleware2
åå 
.
åå 
InvokeAsync
åå *
(
åå* +
CreateHttpContext
åå+ <
(
åå< =
$str
åå= I
)
ååI J
,
ååJ K
FinishInvokeChain
ååL ]
)
åå] ^
.
åå^ _
ConfigureAwait
åå_ m
(
ååm n
false
åån s
)
åås t
;
ååt u
}
ææ 	
[
èè 	
	Benchmark
èè	 
(
èè 
Description
èè 
=
èè  
$str
èè! 9
)
èè9 :
]
èè: ;
public
éé 
async
éé 
Task
éé 
ServiceB1T1P0E1D1
éé +
(
éé+ ,
)
éé, -
{
êê 	
await
ëë 
_middleware2
ëë 
.
ëë 
InvokeAsync
ëë *
(
ëë* +
CreateHttpContext
ëë+ <
(
ëë< =
$str
ëë= I
)
ëëI J
,
ëëJ K
FinishInvokeChain
ëëL ]
)
ëë] ^
.
ëë^ _
ConfigureAwait
ëë_ m
(
ëëm n
false
ëën s
)
ëës t
;
ëët u
}
ìì 	
[
îî 	
	Benchmark
îî	 
(
îî 
Description
îî 
=
îî  
$str
îî! 9
)
îî9 :
]
îî: ;
public
ïï 
async
ïï 
Task
ïï 
ServiceB1T1P1E0D0
ïï +
(
ïï+ ,
)
ïï, -
{
ðð 	
await
ññ 
_middleware2
ññ 
.
ññ 
InvokeAsync
ññ *
(
ññ* +
CreateHttpContext
ññ+ <
(
ññ< =
$str
ññ= I
)
ññI J
,
ññJ K
FinishInvokeChain
ññL ]
)
ññ] ^
.
ññ^ _
ConfigureAwait
ññ_ m
(
ññm n
false
ññn s
)
ññs t
;
ññt u
}
òò 	
[
ôô 	
	Benchmark
ôô	 
(
ôô 
Description
ôô 
=
ôô  
$str
ôô! 9
)
ôô9 :
]
ôô: ;
public
õõ 
async
õõ 
Task
õõ 
ServiceB1T1P1E1D0
õõ +
(
õõ+ ,
)
õõ, -
{
öö 	
await
÷÷ 
_middleware2
÷÷ 
.
÷÷ 
InvokeAsync
÷÷ *
(
÷÷* +
CreateHttpContext
÷÷+ <
(
÷÷< =
$str
÷÷= I
)
÷÷I J
,
÷÷J K
FinishInvokeChain
÷÷L ]
)
÷÷] ^
.
÷÷^ _
ConfigureAwait
÷÷_ m
(
÷÷m n
false
÷÷n s
)
÷÷s t
;
÷÷t u
}
øø 	
[
úú 	
	Benchmark
úú	 
(
úú 
Description
úú 
=
úú  
$str
úú! 9
)
úú9 :
]
úú: ;
public
ûû 
async
ûû 
Task
ûû 
ServiceB1T1P1E1D1
ûû +
(
ûû+ ,
)
ûû, -
{
üü 	
await
ýý 
_middleware2
ýý 
.
ýý 
InvokeAsync
ýý *
(
ýý* +
CreateHttpContext
ýý+ <
(
ýý< =
$str
ýý= I
)
ýýI J
,
ýýJ K
FinishInvokeChain
ýýL ]
)
ýý] ^
.
ýý^ _
ConfigureAwait
ýý_ m
(
ýým n
false
ýýn s
)
ýýs t
;
ýýt u
}
þþ 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
ServiceB1T1P2E0D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware2
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
ServiceB1T1P2E1D0
 +
(
+ ,
)
, -
{
 	
await
 
_middleware2
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
[
 	
	Benchmark
	 
(
 
Description
 
=
  
$str
! 9
)
9 :
]
: ;
public
 
async
 
Task
 
ServiceB1T1P2E1D1
 +
(
+ ,
)
, -
{
 	
await
 
_middleware2
 
.
 
InvokeAsync
 *
(
* +
CreateHttpContext
+ <
(
< =
$str
= I
)
I J
,
J K
FinishInvokeChain
L ]
)
] ^
.
^ _
ConfigureAwait
_ m
(
m n
false
n s
)
s t
;
t u
}
 	
}
 
} 